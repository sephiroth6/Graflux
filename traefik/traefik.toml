defaultEntryPoints = ["http", "https"]
# Enable web backend.
[web]
# Web administration port.
#
# Required
# Default: ":8080"
#
address = ":8080"
[web.auth.basic]
users = ["admin:$apr1$DZkK4C1m$mVT0dG5GAxtsQy0TDMQtT/"]

# Sample entrypoint configuration when using ACME. 
[entryPoints]
  [entryPoints.http]
  address = ":80"
    [entryPoints.http.redirect]
      entryPoint = "https"
  [entryPoints.https]
  address = ":443"
    [entryPoints.https.tls]

# Enable ACME (Let's Encrypt): automatic SSL.
# Email address used for registration.
# Required
[acme]
email = "a.giovinazzo@skyfield.io"
# File or key used for certificates storage.
# Required
# or `storage = "traefik/acme/account"` if using KV store.
storage = "/etc/traefik/certs/acme.json"
# Entrypoint to proxy acme challenge/apply certificates to.
# WARNING, must point to an entrypoint on port 443
# Required
entryPoint = "https"
# onHostRule and onDemand, dictate how Traefik should go about generating certificates. 
# We want to fetch our certificates as soon as our containers with specified hostnames are created,
# and that's what the onHostRule setting will do. The onDemand setting would attempt to generate 
# certificates the first time that a request is made. This would slow down the first request and
# be very noticeable to the visitor, so we'll avoid that.
# Optional
onHostRule = true
onDemand = false


################################################################
# Docker configuration backend
################################################################
# Enable Docker configuration backend.
[docker]
# Docker server endpoint. Can be a tcp or a unix socket endpoint.
#
# Required
#
endpoint = "unix:///var/run/docker.sock"# Default domain used.
# Can be overridden by setting the "traefik.domain" label on a container.
#
# Required
#
domain = "not.example.com"
# Enable watch docker changes.
#
# Optional
#
watch = true
#
#
#
#
#
#
Override default configuration template.
For advanced users :)
Optional
filename = "docker.tmpl"
# Expose containers by default in Traefik.
# If set to false, containers that don't have `traefik.enable=true` will be
ignored.
#
# Optional
# Default: true
#
#exposedbydefault = true
# Use the IP address from the binded port instead of the inner network one.
# For specific use-case :)
#
# Optional
# Default: false
#
#usebindportip = true
# Use Swarm Mode services as data provider.
#
# Optional
# Default: false
#
swarmmode = false


# Use a DNS based acme challenge rather than external HTTPS access
#
#
# Optional
#
# dnsProvider = "digitalocean"
# By default, the dnsProvider will verify the TXT DNS challenge record
before letting ACME verify.
# If delayDontCheckDNS is greater than zero, avoid this & instead just wait
so many seconds.
# Useful if internal networks block external DNS queries.
#
# Optional
#
# delayDontCheckDNS = 0
# If true, display debug log messages from the acme client library.
#
# Optional
#
# acmeLogging = true
# Enable on demand certificate.
#
# Optional
#

#
# Enable certificate generation on frontends Host rules.
#
#
#
#
#
#
# CA server to use.
#- Uncomment the line to run on the staging let's encrypt server.
#- Leave comment to go to prod.
#
#
#
#
#
#
#
#
#
#
#
# Domains list.
Optional
caServer = "https://acme-staging.api.letsencrypt.org/directory"
[[acme.domains]]
main = "local1.com"
sans = ["test1.local1.com", "test2.local1.com"]
[[acme.domains]]
main = "local2.com"
sans = ["test1.local2.com", "test2.local2.com"]
[[acme.domains]]
main = "local3.com"
[[acme.domains]]
main = "local4.com"
[acme.httpChallenge]
# EntryPoint to use for the HTTP-01 challenges.
#
# Required
#
entryPoint = "http"